% \iffalse meta-comment
%
% Copyright (C) 2018 by Michael G. Hansen
% 
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either
% version 1.3 of this license or (at your option) any later
% version. The latest version of this license is in:
% 
% http://www.latex-project.org/lppl.txt
% 
% and version 1.3 or later is part of all distributions of
% LaTeX version 2005/12/01 or later.

% The ORCID icon was taken from ORCID's Trademark and ID display guidelines
% page and its use is subject to those conditions:
% https://orcid.org/trademark-and-id-display-guidelines
%
%<package>\NeedsTeXFormat{LaTeX2e}[1994/06/01]
%<package>\ProvidesPackage{linkToId}[2018/05/18 v0.2 Links to ID services such as ORCID]
%
% \fi
%
% \iffalse
%
%<*driver>
\documentclass{ltxdoc}
\usepackage{linkToId}
\usepackage{lastpage}
\usepackage{fancyhdr}

\pagestyle{fancy}
\fancyhf{}
\renewcommand{\headrulewidth}{0pt}
\fancyhead{}
\fancyfoot{}
\fancyfoot[CE,CO]{\thepage\  / \pageref{LastPage}}
% TODO: These are not really at the left/right, but there is a margin.
\fancyfoot[RE,LO]{\textsf{linkToId}~\fileversion, dated~\filedate}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\GetFileInfo{linkToId.sty}
\hypersetup{
  pdftitle    = {The linkToId package},
  pdfauthor   = {Michael G. Hansen},
  pdfkeywords = {ORCID}
}

\begin{document}
   \DocInput{linkToId.dtx}
\end{document}
%</driver>
% \fi
%
\iffalse
%% TODO: How to properly comment the documentation? Only the iffalse prevents
%% these comments from being inserted into the document as regular text.
%% Counts the number of backslashes in the file and compares them to the parameter.
%% Parameter value 0 only outputs a warning. Checksum requires that the command
%% StopEventually is used somewhere in the document.
\fi
% \CheckSum{0}

\iffalse
%% For finding character transmission errors
\fi
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}

% \changes{v0.1}{2018-04-08}{Initial version}
% \changes{v0.2}{2018-05-18}{Add checksum tests for ORCID and options for footnotes.}

% \linkToIdFootnoteNoNumber{\linkToOrcidNameIconId{Michael G. Hansen}{https://orcid.org/0000-0001-5180-2511}}
% \title{The \textsf{linkToId} package}
% \author{\linkToOrcidNameIcon[addFootnote=false]{Michael G. Hansen}{https://orcid.org/0000-0001-5180-2511} \\ \texttt{mike at mghansen dot de}}
% \maketitle
% \iffalse
%% maketitle switches the page style, we have to switch it back immediately
% \fi
% \thispagestyle{fancy}
\iffalse
%% index could be printed by adding \PrintIndex and running makeindex -o linkToId.ind -s gind.ist linkToId.idx
\fi
% \StopEventually{\PrintChanges}

% This document corresponds to \textsf{linkToId}~\fileversion, dated~\filedate.


% \section{Implementation}
%    \begin{macrocode}
% TODO: Read more of clsguide.pdf to find more things to add.
% TODO: Concerning NeedsTeXFormat: Find out which format we actually require

% TODO: Should these packages be included here or included by the user?
%       Now, the user can not pass options to these packages.

\RequirePackage{kvoptions}
\SetupKeyvalOptions{
    family = Lnk,
    prefix = Lnk@
}
% Can be defined if we should never try to detect luatex
\DeclareBoolOption{nolua}
% Can be defined to have footnote entries generated for linkToOrcidNameIcon
% which also print the id.
\DeclareBoolOption{orcidIdInFootnote}
\ProcessKeyvalOptions{Lnk}

\RequirePackage{tikz}
\RequirePackage{xstring}
% \RequirePackage{stringstrings}
\RequirePackage{hyperref}
\RequirePackage{xkeyval}

% Try to detect Lua if we are supposed to try
\newif\ifLinkToIdUseLua
\ifLnk@nolua
\LinkToIdUseLuafalse
\else
\RequirePackage{ifluatex}
\ifluatex
\LinkToIdUseLuatrue
\else
\LinkToIdUseLuafalse
\fi
\fi

% if we are using lua, use the luacode environment
\ifLinkToIdUseLua
\RequirePackage{luacode}
\fi

%    \end{macrocode}

% \begin{macro}{\linkToIdFootnoteNoNumber}
% Creates a footnote entry with no number.
% Taken from here:\\
% \href{https://en.wikibooks.org/wiki/LaTeX/Footnotes\_and\_Margin\_Notes}{https://en.wikibooks.org/wiki/LaTeX/Footnotes\_and\_Margin\_Notes}\\
% Usage: \\
% |\linkToIdFootnoteNoNumber|\marg{Footnote text.}\\
% Example: |\linkToIdFootnoteNoNumber{Some footnote text.}|\\
% Output: "Some footnote text." as a footnote without a number.
%    \begin{macrocode}
\def\linkToIdFootnoteNoNumber{\xdef\@thefnmark{}\@footnotetext}
%    \end{macrocode}
% \end{macro}

% \subsection{ORCID specifics}
% \subsubsection{Implementation}
%
% Next we set up the icon rendering and the margins as requested by ORCID.
% The ORCID icon was taken from ORCID's Trademark and ID display guidelines
% page and its use is subject to those conditions:
% \href{https://orcid.org/trademark-and-id-display-guidelines}{https://orcid.org/trademark-and-id-display-guidelines}
%
%    \begin{macrocode}
% The conversion of the ORCID icon from SVG to TIKZ is documented in the file preparation/orcid2tikz.tex
% The ORCID icon was taken from ORCID's Trademark and ID display guidelines page and its use is subject
% to those conditions: https://orcid.org/trademark-and-id-display-guidelines
\newcommand{\linkToOrcidIcon}{\begin{tikzpicture}[x=1.6ex,y=1.6ex] % Found by experiment that 1.6ex is about the height of the currently used font\
% #A6CE39 = {166/256,206/256,57/256} = {0.651, 0.808, 0.224}\
\definecolor{orcidgreen}{rgb}{0.651, 0.808, 0.224}\
% the image has a size of 2.56em. We need to scale it such that 2.56em -> 1em. Conversion factor: 0.39\
\begin{scope}[yscale=0.39,xscale=0.39]\
% The y axes is mirrored since the SVG coordinates are in opposite direction.\
% The drawing is then still downwards from 0, therefore we move it up to have its bottom at 0\
\begin{scope}[shift={(0,2.56)},yscale=-1,xscale=1]\
% this is the large surrounding circle\
\fill [orcidgreen] (1.28,1.28) circle (1.28);\
% this is the base of the "i", can be drawn as a filled rectangle\
\fill [white] (0.863,1.862) rectangle (0.709,0.791);\
% this is the outer shape of the "D"\
\fill [white] (1.089,0.791) -- (1.505,0.791) .. controls (1.901,0.791) and (2.075,1.074) .. (2.075,1.327) .. controls (2.075,1.602) and (1.86,1.863) .. (1.507,1.863) -- (1.089,1.863) -- (1.089,0.791) -- cycle;\
% this is the inner shape of the "D"\
\fill [orcidgreen] (1.243,1.724) -- (1.488,1.724) .. controls (1.837,1.724) and (1.917,1.459) .. (1.917,1.327) .. controls (1.917,1.112) and (1.780,0.93) .. (1.48,0.93) -- (1.243,0.93) -- cycle;\
% this is the dot of the "i"\
\fill [white] (0.786,0.568) circle (0.101);\
\end{scope}\
\end{scope}\
\end{tikzpicture}}
\newcommand{\linkToOrcidIconMarginLeft}{\hspace{0.25em}\linkToOrcidIcon}
\newcommand{\linkToOrcidIconMarginRight}{\hspace{0.25em}\linkToOrcidIcon}
\newcommand{\linkToOrcidIconMarginBoth}{\hspace{0.25em}\linkToOrcidIcon\hspace{0.25em}}
%    \end{macrocode}

%    \begin{macrocode}
\ifLinkToIdUseLua

\begin{luacode*}

linkToId = {};

-- Checks the checksum of an ORCID id string (without the URL)
linkToId.checkORCIDCheckSum = function(orcidIdString)
    -- Method for verifying the checksum is described here:
    -- https://support.orcid.org/knowledgebase/articles/116780-structure-of-the-orcid-identifier
    local o2=string.gsub(orcidIdString,"-","");
    local code0=string.byte("0");
    local total=0;
    for i = 1,(string.len(o2)-1) do
        local myC=string.sub(o2,i,i);
        local myAsc=tonumber(string.byte(myC,1,1));
        local myDigit=myAsc-code0;
        total = (total + myDigit)*2;
    end

    -- Using the percent sign as a modulo operator does not work in directlua.
    -- But we keep that here even though we now use the luacode* environment.
    local remainder = math.fmod(total, 11);
    local checkResult = math.fmod((12-remainder), 11);
    local checkSumDigit = tostring(checkResult);
    -- replace 10 by X:
    if checkResult==10 then
        checkSumDigit = "X";
    end
    local isValid = (checkSumDigit == string.sub(o2, 16, 16));

    return isValid;
end

-- Check the structure and checksum of a full ORCID id containing the URL
linkToId.checkORCID = function(orcidStringWithURL)

    local httpString="http://orcid.org/";
    if (string.sub(orcidStringWithURL, 1, string.len(httpString))==httpString) then
        return false, "Link to ORCID starts with http:// instead of https://"
    end

    local httpsString="https://orcid.org/";
    if not (string.sub(orcidStringWithURL,1,string.len(httpsString))==httpsString) then
        return false, "Does not start with https://orcid.org"
    end

    -- TODO: check for the xxxx-xxxx-xxxx-xxxX structure
    --       Delayed because string.find needs a percent sign
    local idOnly = string.sub(orcidStringWithURL, string.len(httpsString)+1);
    if not (string.len(idOnly)==16+3) then
        return false, "Does not have a valid length behind URL (should be 19 digits)"
    end
    
    local checkSumOk = linkToId.checkORCIDCheckSum(idOnly);
    if not checkSumOk then
        return false, "Checksum does not match";
    end
    
    return true, "Ok.";
end

-- wrapper for checkORCID which returns 1 in case of error.
-- check for error can be done using latex's ifodd
linkToId.checkORCIDWrapperBool = function(orcidString)
    local isValid, errorMessage = linkToId.checkORCID(orcidString);

    if isValid then
        tex.print(0);
    else
        tex.print(1);
    end
end

-- wrapper for checkORCID which returns the error message
linkToId.checkORCIDWrapperMessage = function(orcidString)
    local isValid, errorMessage = linkToId.checkORCID(orcidString);

    if not isValid then
        tex.print("Invalid ORCID: ");
        tex.print(orcidString);
        tex.print(errorMessage);
    end
end

\end{luacode*}

% note: this command can not be used inside PDF-code, has to be used inside the tex part of \texorpdfstring
\newcommand{\linkToIdCheckORCID}[1]{%
    %
    \ifodd\directlua{linkToId.checkORCIDWrapperBool("#1")}%
        \PackageError{linkToId}%
        {\directlua{linkToId.checkORCIDWrapperMessage("#1")}}%
        {I can not help you more, please check that you did not mistype the ORCID. The ORCID has to begin with https://orcid.org/}%
    \fi%
}

\else %\ifodd\linkToIdNoLua

% note: this command can not be used inside PDF-code, has to be used inside the tex part of \texorpdfstring
\newcommand{\linkToIdCheckORCID}[1]{%
    %
    % Previously used whereisword from stringstring here, but that
    % printed a space somehow. Could not easily remove that output
    % without loosing the value in \theresult.
    % Suppress output of whereisword using a box with 0 width.
    % Even in quiet mode, it puts a space, reason unknown.
    %\setbox0\vbox\bgroup\whereisword[q]{#1}{https://orcid.org/}\egroup{}
    %
    \IfBeginWith{#1}{https://orcid.org/}{%
        % Do nothing, string has correct prefix.
    }{%
        % Check for http instead of https for more precise warning
        \IfBeginWith{#1}{http://orcid.org/}{%
            \PackageError{linkToId}%
            {Invalid ORCID: Link to ORCID starts with http:// instead of https:// in "#1"}%
            {I can not help you more, please check that you did not mistype the ORCID. The ORCID has to begin with https://orcid.org/}%
        }{%
            \PackageError{linkToId}%
                {Invalid ORCID: Missing URL https://orcid.org in "#1"}%
                {I can not help you more, please check that you did not mistype the ORCID. The ORCID has to begin with https://orcid.org/}%
        }%
    }%
}%
\fi %\ifodd\linkToIdNoLua
%    \end{macrocode}

% \subsubsection{Usage}

% The three macros defined below use the \texttt{texorpdfstring} macro internally the return something that \texttt{hyperref}
% can put into a PDF field. This is needed for LyX, for example, to be able to populate the PDF author fields
% automatically, even if these macros are used in the author fields in LyX.

% \begin{macro}{\linkToOrcidIconId}
% Creates a link consisting of a name and an icon.
% Usage: \\
% |\linkToOrcidIconId|\marg{orcid-id}\\
% Example: |\linkToOrcidIconId{https://orcid.org/0000-0002-1825-0097}|\\
% Output: \linkToOrcidIconId{https://orcid.org/0000-0002-1825-0097}
%    \begin{macrocode}
% TODO: Add an option to remove the margin on the left hand side.
\newcommand{\linkToOrcidIconId}[1]{%
    %
    \texorpdfstring{%
        % Tex string
        \linkToIdCheckORCID{#1}%
        \href{#1}{\mbox{\linkToOrcidIconMarginBoth#1}}%
    }{#1}% \texorpdfstring
}
%    \end{macrocode}
%\end{macro}

% \begin{macro}{\linkToOrcidNameIconId}
% Creates a link consisting of a name, an icon and an ID.
% Usage: \\
% |\linkToOrcidNameIconId|\marg{name}\marg{orcid-id}\\
% Example: |\linkToOrcidNameIconId{Josiah Carberry}{https://orcid.org/0000-0002-1825-0097}|\\
% Output: \linkToOrcidNameIconId{Josiah Carberry}{https://orcid.org/0000-0002-1825-0097}
%    \begin{macrocode}
% TODO: Add an option to have links only on the icon and the id and not also on the name.
\newcommand{\linkToOrcidNameIconId}[2]{%
    %
    \texorpdfstring{%
        % Tex string
        \linkToIdCheckORCID{#2}%
        \href{#2}{\mbox{#1\linkToOrcidIconMarginBoth#2}}%
    }{#1: #2}% \texorpdfstring
}
%    \end{macrocode}
%\end{macro}

% \begin{macro}{\linkToOrcidNameIcon}
% \changes{v0.3}{2018-06-01}{Added an option to control generation of footnotes.}
% Creates a link consisting of a name and an icon.
% Usage: \\
% |\linkToOrcidNameIcon|\oarg{options}\marg{name}\marg{orcid-id}\\
% Valid values for options:
% \begin{itemize}
% \item addFootnote: Can be true, false or auto. In case of auto, the orcidIdInFootnote option given to the package is used.
% \end{itemize}
% Example: |\linkToOrcidNameIcon[addFootnote=false]{Josiah Carberry}{https://orcid.org/0000-0002-1825-0097}|\\
% Output: \linkToOrcidNameIcon[addFootnote=false]{Josiah Carberry}{https://orcid.org/0000-0002-1825-0097}
%    \begin{macrocode}
% TODO: Add an option to have links only on the icon and not also on the name.
% TODO: Add an option to remove the margin on the right hand side.
\define@key{linkToOrcidNameIcon}{addFootnote}{\def\linkToOrcidNameIcon@addFootnote{#1}}
\setkeys{linkToOrcidNameIcon}{addFootnote=auto}
\newcommand{\linkToOrcidNameIcon}[3][]{%
    %
    \begingroup%
        \setkeys{linkToOrcidNameIcon}{#1}%
        \IfStrEq{\linkToOrcidNameIcon@addFootnote}{auto}%
        {%
            \ifLnk@orcidIdInFootnote%
                \renewcommand{\linkToOrcidNameIcon@addFootnote}{true}%
            \else%
                \renewcommand{\linkToOrcidNameIcon@addFootnote}{false}%
            \fi%
        }{}%
        %
        \texorpdfstring{%
            % Tex string
            \linkToIdCheckORCID{#3}%
            \href{#3}{\mbox{#2\linkToOrcidIconMarginBoth}}%
            %
            % TODO: Check whether this statement can also be outside of texorpdfstring
            \IfStrEq{\linkToOrcidNameIcon@addFootnote}{true}{
                \linkToIdFootnoteNoNumber{\linkToOrcidNameIconId{#2}{#3}}%
            }{}%
        }{#3}% \texorpdfstring
    \endgroup%
}
%    \end{macrocode}
%\end{macro}

%
% \Finale
\endinput
